stages:
    - build
    - deploy

variables:
 DOCKER_HOST: "tcp://yourcoon.de:2376"
 DOCKER_REGISTRY: "docker-hub.informatik.haw-hamburg.de"
 NEXUS_REGISTRY: "nexus.informatik.haw-hamburg.de"
 SERVICE_NAME: "wp-mbc-ss2018/who-squares"
 DOCKER_TLS_VERIFY: 1

build_image:
  tags:
    - marco
  stage: build
  image: docker:stable-dind
  script:
   # Einloggen in meinen privaten Docker Host
   - mkdir -p ~/.docker
   - echo "$TLSCACERT" > ~/.docker/ca.pem
   - echo "$TLSCERT" > ~/.docker/cert.pem
   - echo "$TLSKEY" > ~/.docker/key.pem
   # Einloggen in HAW Registries
   - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $DOCKER_REGISTRY
   - docker login -u $NEXUS_USER -p $NEXUS_PW $NEXUS_REGISTRY
   # Bauen...
   - docker build -t $SERVICE_NAME:latest .
   - docker tag $SERVICE_NAME:latest $DOCKER_REGISTRY/$SERVICE_NAME:$CI_PIPELINE_ID
   - docker tag $SERVICE_NAME:latest $DOCKER_REGISTRY/$SERVICE_NAME:latest
   - docker push $DOCKER_REGISTRY/$SERVICE_NAME:$CI_PIPELINE_ID
   - docker push $DOCKER_REGISTRY/$SERVICE_NAME:latest
  only:
  - master
  - icc-tests

# Triggered das Deployment
deploy:
  tags:
    - k8s
  environment:
    name: ICC-K8s
  stage: deploy
  image: nexus.informatik.haw-hamburg.de/kubectl:latest
  script:
    #
    - cp deployment/kubernetes_deployment.yaml deployment/kubernetes_deployment_new.yaml
    - sed -i "s/wp-mbc-ss2018\/who-squares:latest/wp-mbc-ss2018\/who-squares:${CI_PIPELINE_ID}/g" deployment/kubernetes_deployment_new.yaml
    # Deploy files
    - kubectl apply -f deployment/adminmongo.yaml
    - kubectl apply -f deployment/mongodb.yaml
    - kubectl apply -f deployment/http-auth.yaml
    - kubectl apply -f deployment/kubernetes_deployment_new.yaml
  only:
  - master
  - icc-tests
